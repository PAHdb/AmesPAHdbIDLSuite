/* Index used for searching */
/*
   Fields used:
     url, name, type, filename, authors, routine name, comments, parameters,
     categories, and attributes
*/
title = "AmesPAHdbIDLSuite Manual";
subtitle = "NASA Ames PAH IR Spectroscopic Database";
libdata = new Array();
libdataItem = 0;



libdata[libdataItem++] = new Array("examples/advanced_spectral_fit.html", "advanced_spectral_fit.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "advanced_spectral_fit.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of fitting an astronomical spectrum and  optimizing several parameters describing the astrophysical  environment, built around the functionality provided by the  AmesPAHdbIDLSuite and should help confirm that the it has been  properly installed. The source code is annotated to guide users and  developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-03-2022</span> <span class= code-output > Add plotting size distribution. Exclude fully-dehydrogenated PAHs.</span> <span class= code-output > Plot using wavelength. Christiaan Boersma.</span> <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> advanced_spectral_fit  ");
  
  
  libdata[libdataItem++] = new Array("examples/advanced_spectral_fit.html#ADVANCED_SPECTRAL_FIT", "ADVANCED_SPECTRAL_FIT", 'routine in <a href="examples/advanced_spectral_fit.html">advanced_spectral_fit.pro</a>', "advanced_spectral_fit.pro", "", "ADVANCED_SPECTRAL_FIT", " Procedure performing an advanced spectral fit.   ", "OPTS     Options   ", "Example", "");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html", "amespahdbidlsuite__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite__define.pro", "   Dr. Christiaan Boersma   ", "", " Main interface to work with the NASA Ames PAH IR Spectroscopic  Database's XML file.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 12-05-2022</span> <span class= code-output > Speed up GETTAGBYUID by using HISTOGRAM. Christiaan</span> <span class= code-output > Boersma</span> <span class= code-output > 10-05-2020</span> <span class= code-output > Fix typo in ExtendDatabase. Christiaan Boersma</span> <span class= code-output > 11-15-2019</span> <span class= code-output > Check the state of parsing an XML-file in PARSEFILE, which</span> <span class= code-output > avoids caching invalid data. Christiaan Boersma.</span> <span class= code-output > 02-12-2019</span> <span class= code-output > Fixed hitting the maximum value that can be held in a LONG in</span> <span class= code-output > GETTAGBYUID by changing data type to ULONG. Ensuring returned</span> <span class= code-output > UIDs reflect those found in GETTAGBYUID. Christiaan Boersma</span> <span class= code-output > 07-17-2018</span> <span class= code-output > Added EXTENDDATABASE</span> <span class= code-output > 10-10-2017</span> <span class= code-output > Fixed GETUIDSCOMPLETECHARGESET to set list to !NULL when last</span> <span class= code-output > last anion/neutral has been matched. Christiaan Boersma.</span> <span class= code-output > 10-06-2017</span> <span class= code-output > Added GETHASH to allow retrieval of the calculated md5-sum.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 08-11-2016</span> <span class= code-output > If md5 cannot be calculated, the basename of the database XML-file</span> <span class= code-output > is used instead. Christiaan Boersma.</span> <span class= code-output > 07-06-2016</span> <span class= code-output > Using now TEMPORARY to move pahdb and joined to properties of</span> <span class= code-output > AmesPAHdbIDLSuite in READFILE and SEARCH, respectively. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 07-02-2016</span> <span class= code-output > Added file_md5 as a property, now calling method FILE_MD5 only</span> <span class= code-output > once in method READFILE, which sets file_md5. Affected routines</span> <span class= code-output > have been updated. File_md5 is added as a tag to the pahdb</span> <span class= code-output > structure. SEARCH and READFILE now print a message when saving to</span> <span class= code-output > cache and both routines have been refactored to store the location</span> <span class= code-output > of the cache file into a variable. READFILE now only prints the</span> <span class= code-output > database header when restoring from cache. Christiaan Boersma.</span> <span class= code-output > 06-29-2016</span> <span class= code-output > Remove scale-property from species. Removed extra comma from</span> <span class= code-output > GETVERSION. Christiaan Boersma.</span> <span class= code-output > 03-15-2016</span> <span class= code-output > Provide argument to ROUTINE_FILEPATH in INIT or compatibility with</span> <span class= code-output > older version of IDL. Christiaan Boersma.</span> <span class= code-output > 09-09-2015</span> <span class= code-output > Added File_WGET procedure and updated INIT to allow for update</span> <span class= code-output > check (enabled with the UpdateCheck-keyword). Christiaan Boersma.</span> <span class= code-output > 08-26-2015</span> <span class= code-output > Added File_MD5 procedure and updated READFILE and SEARCH</span> <span class= code-output > procedures. Updated Init to read VERSION-file from current</span> <span class= code-output > distribution. Christiaan Boersma.</span> <span class= code-output > 04-21-2015</span> <span class= code-output > Moved stop condition to beginning of SEARCH-method. Removed</span> <span class= code-output > duplicate charge tokens from TOKENIZEWORDS. Christiaan Boersma</span> <span class= code-output > 04-07-2015</span> <span class= code-output > Ensured UIDs in GetXXXXByUID are arrays, even when when called</span> <span class= code-output > with scalar. Christiaan Boersma.</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Obtaining and plotting the experimental spectrum of the PAH species    with UID = 100:  <span class= code-prompt >IDL&gt;</span> dbi = OBJ_NEW('AmesPAHdbIDLSuite', Filename='experimental.xml')  <span class= code-prompt >IDL&gt;</span> pahs = db-&gt;GetTransitionsByUID(100)  <span class= code-prompt >IDL&gt;</span> pahs-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,[pahs, dbi]  AmesPAHdbIDLSuite_XMLParser, AmesPAHdbIDLSuite_Species, AmesPAHdbIDLSuite_Transitions, AmesPAHdbIDLSuite_Laboratory_Spectrum, AmesPAHdbIDLSuite_Geometry  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetHash", "AmesPAHdbIDLSuite::GetHash", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetHash", " Returns the MD5-hash of the parsed database file.   ", "", "HASHING", "   string   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetUIDsCompleteChargeSet", "AmesPAHdbIDLSuite::GetUIDsCompleteChargeSet", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetUIDsCompleteChargeSet", " Returns the UIDs of complementary charge sets.   ", "Two      Consider only two charge states   UIDs     UIDs to consider; -1 for all  Count     Number of charge sets found   ", "SEARCH", "  There are issues when isomers are present.     long array (2D)   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetSpeciesByUID", "AmesPAHdbIDLSuite::GetSpeciesByUID", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetSpeciesByUID", " Returns AmesPAHdbIDLSuite_Species-instance containing the data on  the species with UIDs.   ", "UIDs     UIDs to consider; -1 for all  Count     Number of species found   ", "RETRIEVAL", "   Not all species have references/comments and UIDs is updated to    only those that do      AmesPAHdbIDLSuite_Species-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetTransitionsByUID", "AmesPAHdbIDLSuite::GetTransitionsByUID", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetTransitionsByUID", " Returns AmesPAHdbIDLSuite_Transitions-instance containing the data  on the species with UIDs.   ", "UIDs     UIDs to consider; -1 for all  Count     Number of species found   ", "RETRIEVAL", "   AmesPAHdbIDLSuite_Transitions-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetLaboratoryByUID", "AmesPAHdbIDLSuite::GetLaboratoryByUID", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetLaboratoryByUID", " Returns AmesPAHdbIDLSuite_Laboratory_Spectrum-instance containing  the data on the species with UIDs.   ", "UIDs     UIDs to consider; -1 for all  Count     Number of species found   ", "RETRIEVAL", "   AmesPAHdbIDLSuite_Laboratory_Spectrum-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetGeometryByUID", "AmesPAHdbIDLSuite::GetGeometryByUID", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetGeometryByUID", " Returns AmesPAHdbIDLSuite_Geometry-instance containing the data on  the species with UIDs.   ", "UIDs     UIDs to consider; -1 for all  Count     Number of species found   ", "RETRIEVAL", "   AmesPAHdbIDLSuite_Geometry-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::Pointer", "AmesPAHdbIDLSuite::Pointer", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::Pointer", " Returns a pointer to the parsed database.   ", "", "RETRIEVAL", "   pointer   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::Search", "AmesPAHdbIDLSuite::Search", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::Search", " Returns the UIDs that match the given search Str.   ", "Query Str     Search string  Count     Number of results   ", "SEARCH", "   long array (1d)   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::CheckVersion", "AmesPAHdbIDLSuite::CheckVersion", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::CheckVersion", " Checks whether the given Version matched the version of the parsed  database.   ", "Version     Version string   ", "VERSIONING", "   long   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::GetVersion", "AmesPAHdbIDLSuite::GetVersion", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::GetVersion", " Returns versioning information.   ", "String     Formatted version string   ", "VERSIONING", "   structure or string   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::ReadFile", "AmesPAHdbIDLSuite::ReadFile", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::ReadFile", " Reads in a database XML-file   ", "Check     Check the consistency of the XML-file (defaults to 1)  Cache     Use the cache (defaults to 1)   File     Database XML-file   ", "PARSING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite__define.html#AmesPAHdbIDLSuite::Init", "AmesPAHdbIDLSuite::Init", 'routine in <a href="src/amespahdbidlsuite__define.html">amespahdbidlsuite__define.pro</a>', "amespahdbidlsuite__define.pro", "", "AmesPAHdbIDLSuite::Init", " Create an AmesPAHdbIDLSuite-instance.   ", "Filename     Database XML-file  Check     Check the consistency of the XML-file (defaults to 1)  Cache     Use the cache (defaults to 1)  UpdateCheck     Check for updates to the Suite (defaults to 1)   ", "CLASS", "   AmesPAHdbIDLSuite-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html", "amespahdbidlsuite_coadded_spectrum__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to manage a co-added spectrrum.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 04-30-2021</span> <span class= code-output > Remove duplicated SET and CLEANUP methods. Christiaan Boersma.</span> <span class= code-output > 12-13-2018</span> <span class= code-output > Now writing files as IPAC-tables. Christiaan Boersma.</span> <span class= code-output > 05-03-2015</span> <span class= code-output > Updated weights formatting for DESCRIPTION. Christiaan Boersma.</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_CoAdded_Spectrum-instance:  <span class= code-prompt >IDL&gt;</span> coadded = OBJ_NEW('AmesPAHdbIDLSuite_Coadded_Spectrum')  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,coadded  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html#AmesPAHdbIDLSuite_Coadded_Spectrum::Description", "AmesPAHdbIDLSuite_Coadded_Spectrum::Description", 'routine in <a href="src/amespahdbidlsuite_coadded_spectrum__define.html">amespahdbidlsuite_coadded_spectrum__define.pro</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Coadded_Spectrum::Description", "  Output spectrum description.   ", "Str      Ouput to Str   ", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html#AmesPAHdbIDLSuite_Coadded_Spectrum::Plot", "AmesPAHdbIDLSuite_Coadded_Spectrum::Plot", 'routine in <a href="src/amespahdbidlsuite_coadded_spectrum__define.html">amespahdbidlsuite_coadded_spectrum__define.pro</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Coadded_Spectrum::Plot", "  Plot the coadded spectrum.   ", "Wavelength      Whether to set the abscissa units to wavelength  Stick      Whether to plot the spectrum as sticks  Fill       Whether to solid-fill the spectrum  Oplot      Whether to over-plot the spectrum on a previous defined plot  Legend      Whether to show a legend  Color      Color to plot the spectrum with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html#AmesPAHdbIDLSuite_Coadded_Spectrum::Write", "AmesPAHdbIDLSuite_Coadded_Spectrum::Write", 'routine in <a href="src/amespahdbidlsuite_coadded_spectrum__define.html">amespahdbidlsuite_coadded_spectrum__define.pro</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Coadded_Spectrum::Write", " Write the co-added spectrum to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html#AmesPAHdbIDLSuite_Coadded_Spectrum::Get", "AmesPAHdbIDLSuite_Coadded_Spectrum::Get", 'routine in <a href="src/amespahdbidlsuite_coadded_spectrum__define.html">amespahdbidlsuite_coadded_spectrum__define.pro</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Coadded_Spectrum::Get", " Retrieves the AmesPAHdbIDLSuite_CoAdded_Spectrum representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html#AmesPAHdbIDLSuite_Coadded_Spectrum::Set", "AmesPAHdbIDLSuite_Coadded_Spectrum::Set", 'routine in <a href="src/amespahdbidlsuite_coadded_spectrum__define.html">amespahdbidlsuite_coadded_spectrum__define.pro</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Coadded_Spectrum::Set", " Populates the AmesPAHdbIDLSuite_CoAdded_Spectrum-instance.   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Comments  Shift     Shift  Grid     Grid  Profile     Profile  FWHM     FWHM  Weights     Weights  Averaged     Whether the spectra were averaged   Struct     Data structure   ", "SET/GET", "   AmesPAHdbIDLSuite_Coadded_Spectrum-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_coadded_spectrum__define.html#AmesPAHdbIDLSuite_Coadded_Spectrum::Init", "AmesPAHdbIDLSuite_Coadded_Spectrum::Init", 'routine in <a href="src/amespahdbidlsuite_coadded_spectrum__define.html">amespahdbidlsuite_coadded_spectrum__define.pro</a>', "amespahdbidlsuite_coadded_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Coadded_Spectrum::Init", " Create an AmesPAHdbIDLSuite_Coadded_Spectrum-instance   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Comments  Shift     Shift  Grid     Grid  Profile     Profile  FWHM     FWHM  Weights     Weights  Averaged     Whether the spectra were averaged   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Data-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_create_kurucz_stellarmodel_s.html", "amespahdbidlsuite_create_kurucz_stellarmodel_s.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_create_kurucz_stellarmodel_s.pro", "   Dr. Christiaan Boersma   ", "", " Helper function for creating an AmesPAHdb_StellarModel_S struct.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span> <span class= code-output > 11-18-2015</span> <span class= code-output > Fixed FLEM to FLAM. Christiaan Boersma.</span>     BSD licensed      Creating an AmesPAHdb_StellarModel_S struct:       IDL&gt; model = AMESPAHDBIDLSUITE_CREATE_KURUCZ_STELLARMODEL_S(angstroms, flam)   ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_create_kurucz_stellarmodel_s.html#AmesPAHdbIDLSuite_CREATE_KURUCZ_STELLARMODEL_S", "AmesPAHdbIDLSuite_CREATE_KURUCZ_STELLARMODEL_S", 'routine in <a href="src/amespahdbidlsuite_create_kurucz_stellarmodel_s.html">amespahdbidlsuite_create_kurucz_stellarmodel_s.pro</a>', "amespahdbidlsuite_create_kurucz_stellarmodel_s.pro", "", "AmesPAHdbIDLSuite_CREATE_KURUCZ_STELLARMODEL_S", " Creates an AmesPAHdb_StellarModel_S struct, converting flam  [erg/s/cm^2/A] to CGS [erg/s/cm^2/cm^-1/sr] and wavelength  [angstrom] to wavenumber [/cm]   ", "angstroms     Wavelength grid in Angstrom  flam     Associated flam   ", "HELPER", "   Structure   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_create_observation_units_s.html", "amespahdbidlsuite_create_observation_units_s.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_create_observation_units_s.pro", "   Dr. Christiaan Boersma   ", "", " Helper function for creating an AmesPAHdb_Observation_Units_S  structure.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 07-07-2016</span> <span class= code-output > Use PRINT without for-loop. Christiaan Boersma.</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Creating an AmesPAHdb_Observation_Units_S structure:   <span class= code-prompt >IDL&gt;</span> units = AMESPAHDBIDLSUITE_CREATE_OBSERVATION_UNITS_S(AUNIT=3, $ <span class= code-output >                                                            OUNITS=2)</span>   ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_create_observation_units_s.html#AmesPAHdbIDLSuite_CREATE_OBSERVATION_UNITS_S", "AmesPAHdbIDLSuite_CREATE_OBSERVATION_UNITS_S", 'routine in <a href="src/amespahdbidlsuite_create_observation_units_s.html">amespahdbidlsuite_create_observation_units_s.pro</a>', "amespahdbidlsuite_create_observation_units_s.pro", "", "AmesPAHdbIDLSuite_CREATE_OBSERVATION_UNITS_S", " Creates an AmesPAHdb_Observation_Units_S  structure.   ", "AUNIT     Abscissa units: 1=frequency [cm!U-1!N], 2=frequency [Hz],                      3=wavelength [um], and 4=wavelength [A]  OUNIT     Ordinate units: 1=surface brightness [MJy/sr],                      2=surface brightness [W/cm!U2!N/sr],                      3=flux [Jy], and 4=flux [W/cm!U2!N]   ", "HELPER", "   Structure   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html", "amespahdbidlsuite_fitted_spectrum__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to manage a fitted spectrum.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-03-2022</span> <span class= code-output > Align integration ranges with Python code in GETERROR.</span> <span class= code-output > Christiaan Boersma</span> <span class= code-output > 04-28-2022</span> <span class= code-output > Return piecewise errors in GETERROR and handle piecewise.</span> <span class= code-output > errors in DESCRIPTION. Christiaan Boersma.</span> <span class= code-output > 04-27-2022</span> <span class= code-output > Refactored plotting of residual in PLOT and corrected logic</span> <span class= code-output > flow in SET. Christiaan Boersma.</span> <span class= code-output > 06-23-2021</span> <span class= code-output > Get sorting right for GETERROR, added error from GETERROR</span> <span class= code-output > to DESCRIPTION, and call Plot::Init. Christiaan Boersma.</span> <span class= code-output > 04-30-2021</span> <span class= code-output > Added GETERROR. Christiaan Boersma.</span> <span class= code-output > 03-31-2021</span> <span class= code-output > Intersect now calls Spectrum::Intersect instead of</span> <span class= code-output > Data::Intersect. Christiaan Boersma.</span> <span class= code-output > 02-17-2021</span> <span class= code-output > Overload Intersect to ensure weights are also</span> <span class= code-output > intersected. Christiaan Boersma.</span> <span class= code-output > 09-04-2020</span> <span class= code-output > Remove extra comma labels when plotting structures PLOT.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 02-10-2020</span> <span class= code-output > Make sure to remove continuum when calculating norm and</span> <span class= code-output > chi-squared. Christiaan Boersma.</span> <span class= code-output > 01-25-2019</span> <span class= code-output > Now writing files as IPAC-tables. Christiaan Boersma.</span> <span class= code-output > 01-23-2017</span> <span class= code-output > Handle UIDs larger than 999 in PLOT. Christiaan Boersma.</span> <span class= code-output > 04-26-2016</span> <span class= code-output > Updated GETSIZEDISTRIBUTION to use Rice Rule for determining the</span> <span class= code-output > number of bins. Christiaan Boersma.</span> <span class= code-output > 04-11-2016</span> <span class= code-output > Added method GETSIZEDISTRIBUTION. Added SIZEDISTRIBUTION-keyword</span> <span class= code-output > to PLOT. Christiaan Boersma.</span> <span class= code-output > 03-29-2016</span> <span class= code-output > Fixed dot-notation for class access in DESCRIPTION. Christiaan Boersma</span> <span class= code-output > 07-12-2015</span> <span class= code-output > Added GETMETHOD and its infrastructure. Christiaan Boersma.</span> <span class= code-output > 05-20-2015</span> <span class= code-output > Fixed missing Struct in SET. Christiaan Boersma.</span> <span class= code-output > 05-03-2015</span> <span class= code-output > Updated formatting for DESCRIPTION. Christiaan Boersma.</span> <span class= code-output > 04-24-2015</span> <span class= code-output > Refactored GETRESIDUAL and GETBREAKDOWN to use GETFIT and other</span> <span class= code-output > small fixes. Christiaan Boersma.</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_Fitted_Spectrum-instance:  <span class= code-prompt >IDL&gt;</span> fitted = OBJ_NEW('AmesPAHdbIDLSuite_Fitted_Spectrum')  <span class= code-prompt >IDL&gt;</span> fitted-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> fitted-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTORY,fitted  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Description", "AmesPAHdbIDLSuite_Fitted_Spectrum::Description", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Description", "  Output spectrum description.   ", "Str      Ouput to Str   ", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Plot", "AmesPAHdbIDLSuite_Fitted_Spectrum::Plot", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Plot", "  Plot the fitted spectrum.   ", "DistributionSize      Toggle to plot the PAH size distribution  Residual      Toggle to plot the residuals of the fit  Size      Toggle to plot the size breakdown of the fit  Charge      Toggle to plot the charge breakdown of the fit  Composition      Toggle to plot the compositional breakdown of the fit  Structures      Toggle to plot the chemical structures of the PAHs contributing       to the fit  Wavelength      Whether to set the abscissa units to wavelength  Stick      Whether to plot the spectrum as sticks  Fill       Whether to solid-fill the spectrum  Legend      Whether to show a legend  Color      Color to plot the spectrum with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Write", "AmesPAHdbIDLSuite_Fitted_Spectrum::Write", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Write", " Write the fitted spectrum to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Sort", "AmesPAHdbIDLSuite_Fitted_Spectrum::Sort", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Sort", "  Sorts the UIDs by their contribution to the fit.   ", "Flux     Whether to sort by flux instead of abundance.   Weights     Return the sorted weights   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Get", "AmesPAHdbIDLSuite_Fitted_Spectrum::Get", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Get", " Retrieves the AmesPAHdbIDLSuite_Fitted_Spectrum representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Set", "AmesPAHdbIDLSuite_Fitted_Spectrum::Set", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Set", " Populates the AmesPAHdbIDLSuite_Fitted_Spectrum-instance.   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units  Shift     Shift  Grid     Grid  Profile     Profile  FWHM     FWHM  Observation     Observation  Weights     Weights  Method     Method   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetResidual", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetResidual", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetResidual", " Retrieves the residual of the fit.   ", "", "SET/GET", "   float array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetFit", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetFit", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetFit", " Retrieves the total fit.   ", "", "SET/GET", "   float array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetObservation", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetObservation", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetObservation", " Retrieves the ordinate values of the observation.   ", "", "SET/GET", "   float array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetSizeDistribution", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetSizeDistribution", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetSizeDistribution", " Retrieves the PAH size distribution of the fitted PAHs.   ", "NBins     Set the number of bins to use, otherwise Rice's rule is used.  Min    Set the minimum size to consider.  Max    Set the maximum size to consider.   ", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetBreakdown", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetBreakdown", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetBreakdown", " Retrieves the breakdown of the fitted PAHs.   ", "Small     Cut-off size for small PAHs  Flux     Whether to use the flux to determine the breakdown  Absolute     Whether to return the absolute breakdown, otherwise normalize   ", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetClasses", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetClasses", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetClasses", " Retrieves the spectra of the different classes of the fitted PAHs.   ", "Small     Cut-off size for small PAHs   ", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetWeights", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetWeights", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetWeights", " Retrieves the weights of the fitted PAHs   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetNorm", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetNorm", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetNorm", " Retrieves the Norm of the fit   ", "", "SET/GET", "   float   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetChiSquared", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetChiSquared", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetChiSquared", " Retrieves the Chi-squared of the fit.   ", "", "SET/GET", "   float   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetError", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetError", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetError", " Retrieves the error for the fit.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::GetMethod", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetMethod", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::GetMethod", " Retrieves the method used for the fit.   ", "", "SET/GET", "   string   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_fitted_spectrum__define.html#AmesPAHdbIDLSuite_Fitted_Spectrum::Init", "AmesPAHdbIDLSuite_Fitted_Spectrum::Init", 'routine in <a href="src/amespahdbidlsuite_fitted_spectrum__define.html">amespahdbidlsuite_fitted_spectrum__define.pro</a>', "amespahdbidlsuite_fitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Fitted_Spectrum::Init", " Create an AmesPAHdbIDLSuite_Fitted_Spectrum-instance   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units  Shift     Shift  Grid     Grid  Profile     Profile  FWHM     FWHM  Observation     Observation  Weights     Weights  Method     Method   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Fitted_Spectrum-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html", "amespahdbidlsuite_geometry__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_geometry__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Description", "AmesPAHdbIDLSuite_Geometry::Description", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "   Dr. Christiaan Boersma   ", "AmesPAHdbIDLSuite_Geometry::Description", " Class used to hold the PAH geometry data   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "Str       Ouput to Str   ", "INFORMATIVE", "   Changes: <span class= code-output > 10-03-2021</span> <span class= code-output > Added DESCRIPTION to avoid crash on calling HELP. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 29-02-2021</span> <span class= code-output > Saving PNG-files now works for species with UIDs larger than 999.</span> <span class= code-output > 10-10-2017</span> <span class= code-output > Refactored and now using LA_TRIQL and LA_TRIRED instead of TRIQL</span> <span class= code-output > and TRIRED in DIAGONALIZE. Christiaan Boersma.</span> <span class= code-output > 09-18-2017</span> <span class= code-output > Updated GETUIDSCOMPLETECHARGESET to also check equality in number</span> <span class= code-output > of rings in and fixed typo in RINGS in.</span> <span class= code-output > 04-08-2015</span> <span class= code-output > Fixed memory leak in IDL_Container; moved to IDLgrImage</span> <span class= code-output > instead. Christiaan Boersma</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>  Output geometry description.      BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_Geometry-instance:  <span class= code-prompt >IDL&gt;</span> geo = OBJ_NEW('AmesPAHdbIDLSuite_Geometry')  <span class= code-prompt >IDL&gt;</span> geo-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> geo-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,geo  ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Plot", "AmesPAHdbIDLSuite_Geometry::Plot", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Plot", "  Plot the chemical structure.   ", "NoErase      Whether to erase the output before plotting  Resolution      Resolution in pixels of the output  Save      Wether to save the plot to file (PNG)  Position      Position in normalized coordinates to place the plot  Scale      Scaling factor for drawing atoms  Thick      Thickness for drawing bonds  RGB      Whether to use decomposed colors  Angle      Rotation angle along the z-axis   UID      UID of the PAH to plot   ", "PLOTTING", "   byte array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Structure", "AmesPAHdbIDLSuite_Geometry::Structure", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Structure", "  Render chemical structure.   ", "Background      Background color  Save      Wether to save the plot to file (PNG)  Resolution      Resolution in pixels of the output  View      Whether to open an interactive display to       view the structure  Axis      Axis of rotation  Angle      Rotation angle along the defined axis  Obj      Return the rendering as an IDLgrModel  Transparent      Transparent color  Frame      Render as wire frame   UID      UID of the PAH to plot   ", "PLOTTING", "   byte array or IDLgrModel   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Mass", "AmesPAHdbIDLSuite_Geometry::Mass", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Mass", " Calculates the total mass for each PAH.   ", "", "CALCULATE", "   struct array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Inertia", "AmesPAHdbIDLSuite_Geometry::Inertia", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Inertia", " Calculates the moment of intertia for each PAH.   ", "", "CALCULATE", "   struct array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Rings", "AmesPAHdbIDLSuite_Geometry::Rings", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Rings", " Calculates the number of rings per type for each PAH.   ", "", "CALCULATE", "   struct array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Area", "AmesPAHdbIDLSuite_Geometry::Area", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Area", " Calculates the total area of each PAH.   ", "", "CALCULATE", "   struct array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Diagonalize", "AmesPAHdbIDLSuite_Geometry::Diagonalize", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Diagonalize", " Diagonalizes the moment of inertia of each PAH and aligns its  structure it with the x-y plane.   ", "Full     Whether to include off-diagnonal terms  Equal     Whether to consider all atoms having equal masses   ", "DISPLAY", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Get", "AmesPAHdbIDLSuite_Geometry::Get", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Get", " Retrieves the AmesPAHdbIDLSuite_Geometry representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Set", "AmesPAHdbIDLSuite_Geometry::Set", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Set", " Populates the AmesPAHdbIDLSuite_Geometry-instance.   ", "Data     Data structure  Uids     UIDs in Data   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_geometry__define.html#AmesPAHdbIDLSuite_Geometry::Init", "AmesPAHdbIDLSuite_Geometry::Init", 'routine in <a href="src/amespahdbidlsuite_geometry__define.html">amespahdbidlsuite_geometry__define.pro</a>', "amespahdbidlsuite_geometry__define.pro", "", "AmesPAHdbIDLSuite_Geometry::Init", " Create an AmesPAHdbIDLSuite_Geometry-instance   ", "Data     Data structure  Uids     UIDs in Data   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Geometry-instance   ");
  
  

libdata[libdataItem++] = new Array("gui/amespahdbidlsuite_gui.html", "amespahdbidlsuite_gui.pro", '.pro file in <a href="gui/dir-overview.html">gui/ directory</a>', "amespahdbidlsuite_gui.pro", "   Dr. Christiaan Boersma   ", "", " Procedure for starting the AmesPAHdbIDLSuite Graphical User Interface.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 12-31-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Start the AmesPAHdbIDLSuite Graphical User Interface:   <span class= code-prompt >IDL&gt;</span> amespahdbidlsuite_gui   ");
  
  
  libdata[libdataItem++] = new Array("gui/amespahdbidlsuite_gui.html#AmesPAHdbIDLSuite_GUI", "AmesPAHdbIDLSuite_GUI", 'routine in <a href="gui/amespahdbidlsuite_gui.html">amespahdbidlsuite_gui.pro</a>', "amespahdbidlsuite_gui.pro", "", "AmesPAHdbIDLSuite_GUI", " Starts the AmesPAHdbIDLSuite Graphical User Interface.   ", "Filename     Database XML-file   ", "GUI", "");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_laboratory_spectrum__define.html", "amespahdbidlsuite_laboratory_spectrum__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_laboratory_spectrum__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to manage a laboratory spectrum.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-18-2022</span> <span class= code-output > Use HISTOGRAM in PLOT and WRITE for speed-ups. Christiaan Boersma.</span> <span class= code-output > 04-27-2015</span> <span class= code-output > Fixed INIT to call AmesPAHdbSuite_Plot initializer. Christiaan Boersma</span> <span class= code-output > 01-28-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_Laboratory_Spectrum-instance:  <span class= code-prompt >IDL&gt;</span> lab = OBJ_NEW('AmesPAHdbIDLSuite_Laboratory_Spectrum')  <span class= code-prompt >IDL&gt;</span> lab-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> lab-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,lab  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_laboratory_spectrum__define.html#AmesPAHdbIDLSuite_Laboratory_Spectrum::Plot", "AmesPAHdbIDLSuite_Laboratory_Spectrum::Plot", 'routine in <a href="src/amespahdbidlsuite_laboratory_spectrum__define.html">amespahdbidlsuite_laboratory_spectrum__define.pro</a>', "amespahdbidlsuite_laboratory_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Laboratory_Spectrum::Plot", "  Plot the laboratory spectrum.   ", "Wavelength      Whether to set the abscissa units to wavelength  Stick      Whether to plot the spectrum as sticks  Fill       Whether to solid-fill the spectrum  Oplot      Whether to draw over a previous plot  Legend      Whether to show a legend  Color      Color to plot the spectrum with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_laboratory_spectrum__define.html#AmesPAHdbIDLSuite_Laboratory_Spectrum::Write", "AmesPAHdbIDLSuite_Laboratory_Spectrum::Write", 'routine in <a href="src/amespahdbidlsuite_laboratory_spectrum__define.html">amespahdbidlsuite_laboratory_spectrum__define.pro</a>', "amespahdbidlsuite_laboratory_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Laboratory_Spectrum::Write", " Write the laboratory spectrum to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_laboratory_spectrum__define.html#AmesPAHdbIDLSuite_Laboratory_Spectrum::Init", "AmesPAHdbIDLSuite_Laboratory_Spectrum::Init", 'routine in <a href="src/amespahdbidlsuite_laboratory_spectrum__define.html">amespahdbidlsuite_laboratory_spectrum__define.pro</a>', "amespahdbidlsuite_laboratory_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Laboratory_Spectrum::Init", " Create an AmesPAHdbIDLSuite_Laboratory_Spectrum-instance   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Laboratory_Spectrum-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html", "amespahdbidlsuite_mcfitted_spectrum__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to manage a spectrum fitted using the Monte Carlo approach.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-03-2022</span> <span class= code-output > Remove extraneous plot in GETSIZEDISTRIBUTION. Refactor GETCHISQUARED,</span> <span class= code-output > GETNORM, and GETRESIDUAL, making sure use of proper uncertainties.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 04-28-2022</span> <span class= code-output > Use piecewise errors in DESCRIPTION and add filter. Christiaan Boersma.</span> <span class= code-output > 04-25-2022</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_MCFitted_Spectrum-instance:  <span class= code-prompt >IDL&gt;</span> mcfitted = OBJ_NEW('AmesPAHdbIDLSuite_MCFitted_Spectrum')  <span class= code-prompt >IDL&gt;</span> mcfitted-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> mcfitted-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTORY,mcfitted  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::Description", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Description", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Description", "  Output spectrum description.   ", "Str      Ouput to Str   ", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::Plot", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Plot", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Plot", "  Plot the fitted spectrum.   ", "DistributionSize      Toggle to plot the PAH size distribution  Size      Toggle to plot the size breakdown of the fit  Charge      Toggle to plot the charge breakdown of the fit  Composition      Toggle to plot the compositional breakdown of the fit  Wavelength      Whether to set the abscissa units to wavelength  Stick      Whether to plot the spectrum as sticks  Fill       Whether to solid-fill the spectrum  Legend      Whether to show a legend  Color      Color to plot the spectrum with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::Write", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Write", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Write", " Write the fitted spectrum to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::Get", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Get", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Get", " Retrieves the AmesPAHdbIDLSuite_MCFitted_Spectrum representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::Set", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Set", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Set", " Populates the AmesPAHdbIDLSuite_MCFitted_Spectrum-instance.   ", "Type     Type of Data  Obj     Array holding AmesPAHdbIDLSuiteFittedSpectrum instances  Distribution     Distribution used for permutating errors   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetResidual", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetResidual", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetResidual", " Retrieves the residual of the fit.   ", "", "SET/GET", "    A n by four-element vector containing the mean, variance, skewness, and kurtosis   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetFit", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetFit", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetFit", " Retrieves the total fit.   ", "", "SET/GET", "   float array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetObservation", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetObservation", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetObservation", " Retrieves the ordinate values of the observation.   ", "", "SET/GET", "   float array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetSizeDistribution", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetSizeDistribution", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetSizeDistribution", " Retrieves the PAH size distribution of the fitted PAHs.   ", "NBins     Set the number of bins to use, otherwise Rice's rule is used.  Min    Set the minimum size to consider.  Max    Set the maximum size to consider.   ", "SET/GET", "   A structure with the distribution as a four-element vectors    containing the mean, variance, skewness, and kurtosis   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetBreakdown", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetBreakdown", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetBreakdown", " Retrieves the breakdown of the fitted PAHs.   ", "Small     Cut-off size for small PAHs  Flux     Whether to use the flux to determine the breakdown  Absolute     Whether to return the absolute breakdown, otherwise normalize   ", "SET/GET", "   A structure with four-element vectors containing the mean,    variance, skewness, and kurtosis   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetClasses", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetClasses", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetClasses", " Retrieves the spectra of the different classes of the fitted PAHs.   ", "Small     Cut-off size for small PAHs   ", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetGrid", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetGrid", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetGrid", " Retrieves the abscissa valuesa.   ", "", "SET/GET", "   double array (1D)   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetNorm", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetNorm", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetNorm", " Retrieves the Norm of the fit   ", "", "SET/GET", "   A four-element vector containing the mean, variance, skewness, and kurtosis   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetChiSquared", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetChiSquared", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetChiSquared", " Retrieves the Chi-squared of the fit.   ", "", "SET/GET", "   A four-element vector containing the mean, variance, skewness, and kurtosis   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetError", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetError", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetError", " Retrieves the error for the fit.   ", "", "SET/GET", "   A four-element vector containing the mean, variance, skewness, and kurtosis   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetMethod", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetMethod", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetMethod", " Retrieves the method used for the fit.   ", "", "SET/GET", "   string   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::GetDistribution", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetDistribution", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::GetDistribution", " Retrieves the distribution used for permutating errors.   ", "", "SET/GET", "   string   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_mcfitted_spectrum__define.html#AmesPAHdbIDLSuite_MCFitted_Spectrum::Init", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Init", 'routine in <a href="src/amespahdbidlsuite_mcfitted_spectrum__define.html">amespahdbidlsuite_mcfitted_spectrum__define.pro</a>', "amespahdbidlsuite_mcfitted_spectrum__define.pro", "", "AmesPAHdbIDLSuite_MCFitted_Spectrum::Init", " Create an AmesPAHdbIDLSuite_MCFitted_Spectrum-instance   ", "Type     Type of Data  Obj     Array holding AmesPAHdbIDLSuiteFittedSpectrum instances  Distribution     Distribution used for permutating errors   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_MCFitted_Spectrum-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html", "amespahdbidlsuite_observation__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_observation__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to hold an astronomical spectrum.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 04-27-2022</span> <span class= code-output > Added NOTICE-keyword and check for no abscissa units ABSCISSAUNITSTO.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 04-30-2021</span> <span class= code-output > Fix parsing of ASCII-files and accommondate IPAC tables.</span> <span class= code-output > Sort data when chaning units. Christiaan Boersma.</span> <span class= code-output > 07-07-2016</span> <span class= code-output > Removed extraneous spaces after last column when writing to file</span> <span class= code-output > in WRITE. Now using TEMPORARY where appropriate. Christiaan Boersma.</span> <span class= code-output > 04-21-2016</span> <span class= code-output > Added Resolution keyword to REBIN. Added message to</span> <span class= code-output > ReadFromFITSFile and ReadFromTextFile printing filename. Fixed bug</span> <span class= code-output > in Init not handeling input struct correctly. Christiaan Boersma.</span> <span class= code-output > 03-18-2016</span> <span class= code-output > Fixed bug in ReadFromFile using now '-&gt;' instead of</span> <span class= code-output > '.'. Christiaan Boersma.</span> <span class= code-output > 11-05-2015</span> <span class= code-output > Fixed REBIN to handle data outside original grid. Christiaan Boersma.</span> <span class= code-output > 05-03-2015</span> <span class= code-output > Reading from file will now honor overriding keywords in</span> <span class= code-output > SET. Christiaan Boersma.</span> <span class= code-output > 04-07-2015</span> <span class= code-output > Added SETGRIDRANGE. Christiaan Boersma.</span> <span class= code-output > 01-28-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_Observation-instance:  <span class= code-prompt >IDL&gt;</span> obs = OBJ_NEW('AmesPAHdbIDLSuite_Observation')  <span class= code-prompt >IDL&gt;</span> obs-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> obs-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,obs  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::Plot", "AmesPAHdbIDLSuite_Observation::Plot", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::Plot", "  Plot the astronomical spectrum.   ", "Stick      Whether to plot the spectrum as sticks  Fill       Whether to solid-fill the spectrum  Oplot      Whether to draw over a previous plot  Color      Color to plot the spectrum with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::Write", "AmesPAHdbIDLSuite_Observation::Write", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::Write", " Write the astronomical spectrum to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::AbscissaUnitsTo", "AmesPAHdbIDLSuite_Observation::AbscissaUnitsTo", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::AbscissaUnitsTo", "  Convert abscissa units.   ", "Noticexunit      Type to convert to   ", "MANIPULATE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::Rebin", "AmesPAHdbIDLSuite_Observation::Rebin", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::Rebin", "  Rebin astronomical spectrum.   ", "Uniform      Whether to generate a equally spaced grid  Resolution      Whether to generate a grid with a fixed resolution   x      Either grid, grid spacing or resolution depending on the       set keywords   ", "MANIPULATE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::ReadFromFile", "AmesPAHdbIDLSuite_Observation::ReadFromFile", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::ReadFromFile", "  Read astronomical spectrum from a file.   ", "Units      Units describing structure   Filename      File to read   ", "INPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::SetGridRange", "AmesPAHdbIDLSuite_Observation::SetGridRange", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::SetGridRange", " Truncates the data to the given range.   ", "min     Minimum abscissa value  max     Maximum abscissa value   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::GetGrid", "AmesPAHdbIDLSuite_Observation::GetGrid", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::GetGrid", " Retrieves the abscissa values.   ", "", "SET/GET", "   float array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::Get", "AmesPAHdbIDLSuite_Observation::Get", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::Get", " Retrieves the AmesPAHdbIDLSuite_Observation representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::Set", "AmesPAHdbIDLSuite_Observation::Set", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::Set", " Populates the AmesPAHdbIDLSuite_Observation-instance.   ", "X     Abscissa values  Y     Ordinate values  ErrX     Uncertainties associated with the abscissa values  ErrY     Uncertainties associated with the ordinate values  Continuum     Continuum values  Units     Units describing structure  Header     FITS header associated with the data   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_observation__define.html#AmesPAHdbIDLSuite_Observation::Init", "AmesPAHdbIDLSuite_Observation::Init", 'routine in <a href="src/amespahdbidlsuite_observation__define.html">amespahdbidlsuite_observation__define.pro</a>', "amespahdbidlsuite_observation__define.pro", "", "AmesPAHdbIDLSuite_Observation::Init", " Create an AmesPAHdbIDLSuite_Observation-instance   ", "X     Abscissa values  Y     Ordinate values  ErrX     Uncertainties associated with the abscissa values  ErrY     Uncertainties associated with the ordinate values  Continuum     Continuum values  Units     Units describing structure  Header     FITS header associated with the data   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Observation-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html", "amespahdbidlsuite_species__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_species__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to hold and access the data and properties in a parsed  database.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-08-2019</span> <span class= code-output > In the absence of Michael Galloy's STR_REPLACE function</span> <span class= code-output > FormatFormulae will print a message and return. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 10-17-2017</span> <span class= code-output > Fixed units definition in TRANSITIONS.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Creating, setting and printing Species info:  <span class= code-prompt >IDL&gt;</span> species = OBJ_NEW('AmesPAHdbIDLSuite_Species')  <span class= code-prompt >IDL&gt;</span> species-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> species-&gt;Print  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,info  AmesPAHdbIDLSuite_Species, AmesPAHdbIDLSuite_Transitions, AmesPAHdbIDLSuite_Laboratory_Spectrum, AmesPAHdbIDLSuite_Geometry  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::FormatFormulae", "AmesPAHdbIDLSuite_Species::FormatFormulae", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::FormatFormulae", " Make the formulae look pretty by embedding formatting commands.   ", "", "MARKUP", "STR_REPLACE, by, Michael, Galloy  ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Print", "AmesPAHdbIDLSuite_Species::Print", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Print", "  Output species description.   ", "Str       Ouput to Str   UID      UID of the species   ", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Comments", "AmesPAHdbIDLSuite_Species::Comments", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Comments", " Retrieves species comments.   ", "", "SET/GET", "   AmesPAHdb_Comment_S array   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::References", "AmesPAHdbIDLSuite_Species::References", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::References", " Retrieves species references.   ", "", "SET/GET", "   AmesPAHdb_Reference_S array  ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Transitions", "AmesPAHdbIDLSuite_Species::Transitions", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Transitions", " Retrieves species transitions.   ", "", "SET/GET", "   AmesPAHdbIDLSuite_Transitions-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Geometry", "AmesPAHdbIDLSuite_Species::Geometry", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Geometry", " Retrieves species geometry.   ", "", "SET/GET", "   AmesPAHdbIDLSuite_Geometry-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Laboratory", "AmesPAHdbIDLSuite_Species::Laboratory", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Laboratory", " Retrieves species laboratory spectra.   ", "", "SET/GET", "   AmesPAHdbIDLSuite_Laboratory_Spectrum-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Get", "AmesPAHdbIDLSuite_Species::Get", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Get", " Retrieves the AmesPAHdbIDLSuite_Species representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Set", "AmesPAHdbIDLSuite_Species::Set", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Set", " Populates the AmesPAHdbIDLSuite_Species-instance.   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  References     References  Comments     Comments   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_species__define.html#AmesPAHdbIDLSuite_Species::Init", "AmesPAHdbIDLSuite_Species::Init", 'routine in <a href="src/amespahdbidlsuite_species__define.html">amespahdbidlsuite_species__define.pro</a>', "amespahdbidlsuite_species__define.pro", "", "AmesPAHdbIDLSuite_Species::Init", " Create an AmesPAHdbIDLSuite_Species-instance   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  References     References  Comments     Comments   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Species-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html", "amespahdbidlsuite_spectrum__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_spectrum__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to manage a spectrum.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-18-2022</span> <span class= code-output > Use HISTOGRAM speed-up in PLOT. Christiaan Boersma.</span> <span class= code-output > 04-28-2022</span> <span class= code-output > Clean up OBSERVATION in MCFIT when internally generated.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 04-27-2022</span> <span class= code-output > Added MCFIT and corrected small typos in description of FIT.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 08-17-2021</span> <span class= code-output > Don't try and access pointer when it is not set in DESCRIPTION.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 05-03-2021</span> <span class= code-output > Avoid potential issues when self.uids and self.data.uid don't have</span> <span class= code-output > the same ordering. Christiaan Boersma.</span> <span class= code-output > 05-02-2021</span> <span class= code-output > Added NOTICE-keyword to FIT. Christiaan Boersma.</span> <span class= code-output > 04-30-2021</span> <span class= code-output > Refactored FIT to make use of matrix operation.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 09-19-2017</span> <span class= code-output > Fixed !NULL value in return for FWHM in FIT.</span> <span class= code-output > 06-27-2016</span> <span class= code-output > Added EXTERNAL_NNLS-keyword to FIT. Christiaan Boersma.</span> <span class= code-output > 03-23-2016</span> <span class= code-output > Removed unnecessary declaration of 'weights' in FIT. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 03-18-2016</span> <span class= code-output > Replaced [ ] with !NULL in NNLS to avoid compiler error for IDL</span> <span class= code-output > version older than 8. Christiaan Boersma.</span> <span class= code-output > 11-05-2015</span> <span class= code-output > Added REGRID. Christiaan Boersma.</span> <span class= code-output > 07-12-2015</span> <span class= code-output > Added method to FIT. Christiaan Boersma.</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create and destroy an    AmesPAHdbIDLSuite_Spectrum-instance:  <span class= code-prompt >IDL&gt;</span> spectrum = OBJ_NEW('AmesPAHdbIDLSuite_Spectrum')  <span class= code-prompt >IDL&gt;</span> spectrum-&gt;Set,data  <span class= code-prompt >IDL&gt;</span> spectrum-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,spectrum  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Description", "AmesPAHdbIDLSuite_Spectrum::Description", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Description", "  Output spectrum description.   ", "Str       Ouput to Str   ", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Plot", "AmesPAHdbIDLSuite_Spectrum::Plot", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Plot", "  Plot the spectrum.   ", "Wavelength      Whether to set the abscissa units to wavelength  Stick      Whether to plot the spectrum as sticks  Fill       Whether to solid-fill the spectrum  Oplot      Whether to draw over a previous plot  Legend      Whether to show a legend  Color      Color to plot the spectrum with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Write", "AmesPAHdbIDLSuite_Spectrum::Write", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Write", " Write the spectrum to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Fit", "AmesPAHdbIDLSuite_Spectrum::Fit", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Fit", "  Perform a spectroscopic fit.   ", "EXTERNAL_NNLS     Whether to use an externally defined NNLS-routine  Notice     Whether to show notices   observation      Observed spectrum  error      Uncertainties associated with observation   ", "FITTING", "    AmesPAHdbIDLSuite_Fitted_Spectrum   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::MCFit", "AmesPAHdbIDLSuite_Spectrum::MCFit", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::MCFit", "  Perform spectroscopic fits using a Monte Carlo approach.   ", "EXTERNAL_NNLS     Whether to use an externally defined NNLS-routine.   Uniform     Whether to use a uniform rather than a normal distribution to permutate the errors.  observation      Observed spectrum  error      Uncertainties associated with observation  samples      Number of Monte Carlo samples   ", "FITTING", "    AmesPAHdbIDLSuite_MCFitted_Spectrum   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Resample", "AmesPAHdbIDLSuite_Spectrum::Resample", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Resample", "  Resample the spectrum onto a provided grid.   ", "grid      The grid   ", "MANIPULATE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Coadd", "AmesPAHdbIDLSuite_Spectrum::Coadd", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Coadd", "  Co-adds the spectra   ", "Weights      Use the provided weights when co-adding  Average      Take the average   ", "CALCULATE", "    AmesPAHdb_Coadded_Spectrum   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Get", "AmesPAHdbIDLSuite_Spectrum::Get", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Get", " Retrieves the AmesPAHdbIDLSuite_Spectrum representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Set", "AmesPAHdbIDLSuite_Spectrum::Set", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Set", " Populates the AmesPAHdbIDLSuite_Spectrum-instance.   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units  Shift     Shift  Grid     Grid  Profile     Profile  FWHM     FWHM   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::GetGrid", "AmesPAHdbIDLSuite_Spectrum::GetGrid", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::GetGrid", " Retrieves the abscissa valuesa.   ", "", "SET/GET", "   double array (1D)   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_spectrum__define.html#AmesPAHdbIDLSuite_Spectrum::Init", "AmesPAHdbIDLSuite_Spectrum::Init", 'routine in <a href="src/amespahdbidlsuite_spectrum__define.html">amespahdbidlsuite_spectrum__define.pro</a>', "amespahdbidlsuite_spectrum__define.pro", "", "AmesPAHdbIDLSuite_Spectrum::Init", " Create an AmesPAHdbIDLSuite_Spectrum-instance   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units  Shift     Shift  Grid     Grid  Profile     Profile  FWHM     FWHM   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Spectrum-instance   ");
  
  

libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html", "amespahdbidlsuite_transitions__define.pro", '.pro file in <a href="src/dir-overview.html">src/ directory</a>', "amespahdbidlsuite_transitions__define.pro", "   Dr. Christiaan Boersma   ", "", " Class to manage transitions.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-22-2022</span> <span class= code-output > Use HISTOGRAM for speed-ups in PLOT, PRINT, WRITE,</span> <span class= code-output > CASCADE_IDLBRIDGE, and CALCULATEDTEMPERATURE. Refactor</span> <span class= code-output > CASCADE_IDLBRIDGE and IDLBRIDGE_EXECUTE for using HISTOGRAM</span> <span class= code-output > results and pass DOUBLE with full-resolution to other processes.</span> <span class= code-output > Christiaan Boersma.</span> <span class= code-output > 05-15-2022</span> <span class= code-output > Transparently cache/restore results in CASCADE. Christiaan Boersma.</span> <span class= code-output > 05-12-2022</span> <span class= code-output > Fix timer computation in IDLBRIDGE_CALLBACK. Christiaan Boersma.</span> <span class= code-output > 08-17-2021</span> <span class= code-output > Re-enable (`old-style`) anharmonic profiles. Christiaan Boersma.</span> <span class= code-output > 07-06-2021</span> <span class= code-output > Cleaned up progress bar. Christiaan Boersma.</span> <span class= code-output > 06-02-2021</span> <span class= code-output > Add message to show when blackbody stellar model is used for</span> <span class= code-output > CASCADE. Christiaan Boersma.</span> <span class= code-output > Speed-up a number of methods by avoiding repeated linear</span> <span class= code-output > searches with WHERE and work around self.uids and self.data.uid</span> <span class= code-output > not having the same order. Christiaan Boersma.</span> <span class= code-output > 05-02-2021</span> <span class= code-output > Changed formatting strings to avoid glitch. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 11-09-2020</span> <span class= code-output > Fix formatting strings to properly display 4-digit UIDs.</span> <span class= code-output > Christiaan Boersma</span> <span class= code-output > 01-21-2020</span> <span class= code-output > Fix equations for the Drude profiles, making sure they are in</span> <span class= code-output > frequency-space. Christiaan Boersma</span> <span class= code-output > 03-26-2019</span> <span class= code-output > Correct log-file naming scheme in CASCADE_IDLBRIDGE to</span> <span class= code-output > accommodate more than 9 CPUs/threads. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 10-02-2018</span> <span class= code-output > Allow CASCADE to run on the spectroscopic libaries of the</span> <span class= code-output > experimental database as long as the APPROXIMATE-keyword is</span> <span class= code-output > set. Christiaan Boersma.</span> <span class= code-output > 07-29-2016</span> <span class= code-output > PRINT now shows symmetry and scale for transitions. Christiaan</span> <span class= code-output > Boersma.</span> <span class= code-output > 07-11-2015</span> <span class= code-output > CASCADE and CALCULATEDTEMPERATURE now print calculated effective</span> <span class= code-output > temperature as an INTEGER. Christiaan Boersma</span> <span class= code-output > 05-03-2015</span> <span class= code-output > FIXEDTEMPERATURE, CALCULATEDTEMPERATURE and CASCADE now print used</span> <span class= code-output > emission model. Fixed formatting string in CASCADE. Christiaan</span> <span class= code-output > Boersma</span> <span class= code-output > 04-21-2015</span> <span class= code-output > Updated CASCADE_IDLBRIDGE and</span> <span class= code-output > AMESPAHDBIDLSUITE_TRANSITIONS__IDLBRIDGE_CALLBACK progress</span> <span class= code-output > indicators to not use a fixed width counters. Christiaan Boersma</span> <span class= code-output > 04-15-2015</span> <span class= code-output > Refactored CONVOLE. Christiaan Boersma</span> <span class= code-output > 04-14-2015</span> <span class= code-output > Changed id to uid and xmin + xmax to DOUBLE in CONVOLVE.</span> <span class= code-output > Christiaan Boersma</span> <span class= code-output > 02-01-2015</span> <span class= code-output > First version of the file. Christiaan Boersma.</span>     BSD licensed      Create, apply an emission model and destroy an    AmesPAHdbIDLSuite_Spectrum-instance:  <span class= code-prompt >IDL&gt;</span> transitions = OBJ_NEW('AmesPAHdbIDLSuite_Transitions')  <span class= code-prompt >IDL&gt;</span> transitions-&gt;Set,data,database  <span class= code-prompt >IDL&gt;</span> transitions-&gt;Shift,-15D  <span class= code-prompt >IDL&gt;</span> transitions-&gt;Cascade,4D * 1.603D-12 (4 eV in CGS UNITS)  <span class= code-prompt >IDL&gt;</span> transitions-&gt;Plot  <span class= code-prompt >IDL&gt;</span> OBJ_DESTROY,transitions  ");
  
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Description", "AmesPAHdbIDLSuite_Transitions::Description", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Description", "  Output transitions description.   ", "Str       Ouput to Str   ", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Plot", "AmesPAHdbIDLSuite_Transitions::Plot", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Plot", "  Plot the transitions.   ", "Wavelength      Whether to set the abscissa units to wavelength  Stick      Whether to plot the transitions as sticks  Oplot      Whether to draw over a previous plot  Legend      Whether to show a legend  Color      Color to plot the transitions with  _EXTRA      Required for IDL's keyword-inheritance mechanism   ", "PLOTTING", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Print", "AmesPAHdbIDLSuite_Transitions::Print", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Print", "  Output transtions description.   ", "", "INFORMATIVE", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Write", "AmesPAHdbIDLSuite_Transitions::Write", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Write", " Write the transitions to file as an IPAC-table.   ", "Filename     Output filename   ", "OUTPUT", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Cascade", "AmesPAHdbIDLSuite_Transitions::Cascade", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Cascade", "  Applies the Cascade emission model.   ", "Approximate      Whether to use an approximation  IDLBridge      Whether to use IDL_IDLBridge multi-processing  Star      Whether to use blackbody  ISRF      Whether to use the interstellar radiation field  Convolved      Whether to convolve with the given radiation field  StellarModel      Whether to use a stellar model  Cache      Whether to use cached results   E      Excitation energy in erg   ", "EMISSION MODEL", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::CalculatedTemperature", "AmesPAHdbIDLSuite_Transitions::CalculatedTemperature", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::CalculatedTemperature", "  Applies the Calculated Temperature emission model   ", "Approximate      Whether to use an approximation  Star      Whether to use blackbody  ISRF      Whether to use the interstellar radiation field  StellarModel      Whether to use a stellar model   E     Excitation energy in erg   ", "EMISSION MODEL", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::FixedTemperature", "AmesPAHdbIDLSuite_Transitions::FixedTemperature", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::FixedTemperature", "  Applies the Fixed Temperature emission model   ", "Temperature     Excitation temperature in Kelvin   ", "EMISSION MODEL", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Shift", "AmesPAHdbIDLSuite_Transitions::Shift", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Shift", "  Shifts the band positions.   ", "Shift      Shift in wavenumbers   ", "EMISSION MODEL", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Convolve", "AmesPAHdbIDLSuite_Transitions::Convolve", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Convolve", " Convolve transitions with a line profile.   ", "XRange     Range in wavenumberrs  FWHM     Width parameter in wavenumbers  Npoints     Number of sample points  Grid     Use given grid  Conserve     Whether to force integrated band area to one  Lorentzian     Whether to use Lorentzian profile  Gaussian     Whether to use Gaussian profile  Drude     Whether to use Drude profile  Anharmonics     Whether to emulate anharmonics   ", "EMISSION MODEL", "    AmesPAHdbIDLSuite_Spectrum-instance   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Get", "AmesPAHdbIDLSuite_Transitions::Get", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Get", " Retrieves the AmesPAHdbIDLSuite_Transitions representation in a  structure.   ", "", "SET/GET", "   Structure   ");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Set", "AmesPAHdbIDLSuite_Transitions::Set", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Set", " Populates the AmesPAHdbIDLSuite_Transitions-instance.   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units  Shift     Shift   Struct     Data structure   ", "SET/GET", "");
  
  libdata[libdataItem++] = new Array("src/amespahdbidlsuite_transitions__define.html#AmesPAHdbIDLSuite_Transitions::Init", "AmesPAHdbIDLSuite_Transitions::Init", 'routine in <a href="src/amespahdbidlsuite_transitions__define.html">amespahdbidlsuite_transitions__define.pro</a>', "amespahdbidlsuite_transitions__define.pro", "", "AmesPAHdbIDLSuite_Transitions::Init", " Create an AmesPAHdbIDLSuite_Transitions-instance   ", "Type     Type of Data  Version    Versioning information  Data     Data structure  PAHdb     Pointer to parsed database file  Uids     UIDs in Data  Model     References  Units     Units  Shift     Shift   Struct     Data structure   ", "CLASS", "   AmesPAHdbIDLSuite_Transitions-instance   ");
  
  

libdata[libdataItem++] = new Array("examples/anharmonics.html", "anharmonics.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "anharmonics.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of calculating the PAH emission spectrum of  coronene where the bands have been convolved using anharmonic  profiles buildt around the functionality provided by the  AmesPAHdbIDLSuite and should help confirm that the it has been  properly installed. The source code is annotated to guide users and  developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> anharmonics  ");
  
  
  libdata[libdataItem++] = new Array("examples/anharmonics.html#ANHARMONICS", "ANHARMONICS", 'routine in <a href="examples/anharmonics.html">anharmonics.pro</a>', "anharmonics.pro", "", "ANHARMONICS", " Procedure calculating the anharmonic spectrum of coronene.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/cluster_db_spectra.html", "cluster_db_spectra.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "cluster_db_spectra.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of clustering (kmeans) PAH absorption spectra,  built around the functionality provided by the AmesPAHdbIDLSuite and  should help confirm that the it has been properly installed. The  source code is annotated to guide users and developers in the inner  workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> cluster_db_spectra  ");
  
  
  libdata[libdataItem++] = new Array("examples/cluster_db_spectra.html#CLUSTER_DB_SPECTRA", "CLUSTER_DB_SPECTRA", 'routine in <a href="examples/cluster_db_spectra.html">cluster_db_spectra.pro</a>', "cluster_db_spectra.pro", "", "CLUSTER_DB_SPECTRA", " Procedure performing the clustering analyzes.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/example.html", "example.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "example.pro", "   Dr. Christiaan Boersma   ", "", " This is the adaption of the example shown in Lst. 1 of Bauschlicher  et al. (2010) and should confirm that the AmesPAHdbIDLSuite has been  correctly installed. The source code is annotated to guide users and  developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> example  ");
  
  
  libdata[libdataItem++] = new Array("examples/example.html#example", "example", 'routine in <a href="examples/example.html">example.pro</a>', "example.pro", "", "example", " Procedure demonstrating the use of the AmesPAHdbIDLSuite.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/fit_a_spectrum.html", "fit_a_spectrum.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "fit_a_spectrum.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of fitting an astronomical spectrum and should  confirm that the AmesPAHdbIDLSuite has been correctly installed. The  source code is annotated to guide users and developers in the inner  workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-03-2022</span> <span class= code-output > Add plotting size distribution. Christiaan Boersma.</span> <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> fit_a_spectrum  ");
  
  
  libdata[libdataItem++] = new Array("examples/fit_a_spectrum.html#FIT_A_SPECTRUM", "FIT_A_SPECTRUM", 'routine in <a href="examples/fit_a_spectrum.html">fit_a_spectrum.pro</a>', "fit_a_spectrum.pro", "", "FIT_A_SPECTRUM", " Procedure demonstrating fitting an astronomical spectrum using the  AmesPAHdbIDLSuite.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/mc_fit_a_spectrum.html", "mc_fit_a_spectrum.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "mc_fit_a_spectrum.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of fitting an astronomical spectrum using a Monte Carlo  approach and should confirm that the AmesPAHdbIDLSuite has been correctly  installed. The source code is annotated to guide users and developers in  the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-03-2022</span> <span class= code-output > Add plotting size distribution. Christiaan Boersma.</span> <span class= code-output > 04-28-2022</span> <span class= code-output > Adapt for piecewise errors. Christiaan Boersma.</span> <span class= code-output > 04-27-2022</span> <span class= code-output > Use MCFit instead of Fit. Christiaan Boersma.</span> <span class= code-output > 07-06-2021</span> <span class= code-output > Cleaned up progress bar. Christiaan Boersma.</span> <span class= code-output > 04-30-2021</span> <span class= code-output > First version. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> mc_fit_a_spectrum  ");
  
  
  libdata[libdataItem++] = new Array("examples/mc_fit_a_spectrum.html#MC_FIT_A_SPECTRUM", "MC_FIT_A_SPECTRUM", 'routine in <a href="examples/mc_fit_a_spectrum.html">mc_fit_a_spectrum.pro</a>', "mc_fit_a_spectrum.pro", "", "MC_FIT_A_SPECTRUM", " Procedure demonstrating fitting an astronomical spectrum using the  AmesPAHdbIDLSuite and establishing uncertainties using a Monte-Carlo  approach.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/overlap_matrix.html", "overlap_matrix.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "overlap_matrix.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of clustering (hierarchical) PAH emission spectra  and should confirm that the AmesPAHdbIDLSuite has been correctly  installed. The source code is annotated to guide users and  developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> overlap_matrix  ");
  
  
  libdata[libdataItem++] = new Array("examples/overlap_matrix.html#OVERLAP_MATRIX", "OVERLAP_MATRIX", 'routine in <a href="examples/overlap_matrix.html">overlap_matrix.pro</a>', "overlap_matrix.pro", "", "OVERLAP_MATRIX", " Procedure performing a hierarchical clustering of PAH emission  spectra based on their overlap (area).   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/random_mixtures.html", "random_mixtures.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "random_mixtures.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of preducing a number of random-mixture PAH  emission spectrum, built around the functionality provided by the  AmesPAHdbIDLSuite and should help confirm that the it has been  properly installed.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 07-06-2021</span> <span class= code-output > Cleaned up progress bar. Christiaan Boersma.</span> <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> random_mixtures  ");
  
  
  libdata[libdataItem++] = new Array("examples/random_mixtures.html#RANDOM_MIXTURES", "RANDOM_MIXTURES", 'routine in <a href="examples/random_mixtures.html">random_mixtures.pro</a>', "random_mixtures.pro", "", "RANDOM_MIXTURES", " Procedure creating a number of random-mixture spectra.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/stability_of_fit_a_spectrum.html", "stability_of_fit_a_spectrum.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "stability_of_fit_a_spectrum.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of testing the stability of fitting an  astronomical spectrum by iteratively removing the most contributing  PAH species from a subsequent fit, built around the functionality  provided by the AmesPAHdbIDLSuite and should help confirm that the  it has been properly installed. The source code is annotated to  guide users and developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> stability_of_fit_a_spectrum  ");
  
  
  libdata[libdataItem++] = new Array("examples/stability_of_fit_a_spectrum.html#STABILITY_OF_FIT_A_SPECTRUM", "STABILITY_OF_FIT_A_SPECTRUM", 'routine in <a href="examples/stability_of_fit_a_spectrum.html">stability_of_fit_a_spectrum.pro</a>', "stability_of_fit_a_spectrum.pro", "", "STABILITY_OF_FIT_A_SPECTRUM", " Procedure testing the stability of a spectroscopic fit.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/stellar_kurucz_model.html", "stellar_kurucz_model.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "stellar_kurucz_model.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of creating an astronomical PAH emission spectrum  using a Kurucz stellar model for excitination, built around the  functionality provided by the AmesPAHdbIDLSuite and should help  confirm that the it has been properly installed. The source code is  annotated to guide users and developers in the inner workings of the  suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> stellar_kurucz_model  ");
  
  
  libdata[libdataItem++] = new Array("examples/stellar_kurucz_model.html#STELLAR_KURUCZ_MODEL", "STELLAR_KURUCZ_MODEL", 'routine in <a href="examples/stellar_kurucz_model.html">stellar_kurucz_model.pro</a>', "stellar_kurucz_model.pro", "", "STELLAR_KURUCZ_MODEL", " Procedure creating an astronomical PAH emission spectrum using a  Kurucz stellar model for excitination.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/test_idlbridge.html", "test_idlbridge.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "test_idlbridge.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of testing the IDL_IDLBridge components provided  by the Suite, built around the functionality provided by the  AmesPAHdbIDLSuite and should help confirm that the it has been  properly installed. The source code is annotated to guide users and  developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> test_idlbridge  ");
  
  
  libdata[libdataItem++] = new Array("examples/test_idlbridge.html#TEST_IDLBRIDGE", "TEST_IDLBRIDGE", 'routine in <a href="examples/test_idlbridge.html">test_idlbridge.pro</a>', "test_idlbridge.pro", "", "TEST_IDLBRIDGE", " Procedure testing the IDL_IDLBridge functionallity.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/test_nnls.html", "test_nnls.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "test_nnls.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of testing the non-negative least-squares  decomposition for a number of a randomly generated spectra, built  around the functionality provided by the AmesPAHdbIDLSuite and  should help confirm that the it has been properly installed. The  source code is annotated to guide users and developers in the inner  workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 05-16-2022</span> <span class= code-output > Define indices array and expand formatting. Christiaan Boersma.</span> <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> test_nnls  ");
  
  
  libdata[libdataItem++] = new Array("examples/test_nnls.html#TEST_NNLS", "TEST_NNLS", 'routine in <a href="examples/test_nnls.html">test_nnls.pro</a>', "test_nnls.pro", "", "TEST_NNLS", " Procedure testing non-negative least-squares decomposition.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/test_pcomp.html", "test_pcomp.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "test_pcomp.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of applying principal component analysis to the  spectra in the database, built around the functionality provided by  the AmesPAHdbIDLSuite and should help confirm that the it has been  properly installed.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> test_pcomp  ");
  
  
  libdata[libdataItem++] = new Array("examples/test_pcomp.html#TEST_PCOMP", "TEST_PCOMP", 'routine in <a href="examples/test_pcomp.html">test_pcomp.pro</a>', "test_pcomp.pro", "", "TEST_PCOMP", " Procedure for testing a principal component analysis on a number of  generated PAH emission spectra.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/test_svdc.html", "test_svdc.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "test_svdc.pro", "   Dr. Christiaan Boersma   ", "", " This is an example of applying singular value decomposition to the  spectra in the database, built around the functionality provided by  the AmesPAHdbIDLSuite and should help confirm that the it has been  properly installed.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> test_svdc  ");
  
  
  libdata[libdataItem++] = new Array("examples/test_svdc.html#TEST_SVDC", "TEST_SVDC", 'routine in <a href="examples/test_svdc.html">test_svdc.pro</a>', "test_svdc.pro", "", "TEST_SVDC", " Procedure for testing a singular value decomposition analysis on a  number of generated PAH emission spectra.   ", "", "Example", "");
  
  

libdata[libdataItem++] = new Array("examples/test_uniqueness.html", "test_uniqueness.pro", '.pro file in <a href="examples/dir-overview.html">examples/ directory</a>', "test_uniqueness.pro", "   Dr. Christiaan Boersma   ", "", " This is an example testing the uniqueness of a number of randomly  generated PAH emission spectra , built around the functionality  provided by the AmesPAHdbIDLSuite and should help confirm that the  it has been properly installed. The source code is annotated to  guide users and developers in the inner workings of the suite.   Updated versions of the NASA Ames PAH IR Spectroscopic Database and  more information can be found at: www.astrochemistry.org/pahdb.   ", "", "          -1", "   Changes: <span class= code-output > 08-19-2019</span> <span class= code-output > Documentation added. Christiaan Boersma.</span>     BSD licensed      Call the procedure directly:  <span class= code-prompt >IDL&gt;</span> test_uniqueness  ");
  
  
  libdata[libdataItem++] = new Array("examples/test_uniqueness.html#TEST_UNIQUENESS", "TEST_UNIQUENESS", 'routine in <a href="examples/test_uniqueness.html">test_uniqueness.pro</a>', "test_uniqueness.pro", "", "TEST_UNIQUENESS", " Procedure for testing the uniqueness of a number of randomly  generate PAH emission spectra.   ", "", "Example", "");
  
  

